#!/bin/sh

# file: mkkb.sh
# project: wikidata2
# author: Pavel Raur (xraurp00@stud.fit.vutbr.cz)
# description: merges separate type files into KB

project_folder="$(readlink -f $0 | xargs -I{} dirname {})"
person_file="$project_folder"/output/persons_unmerged.tsv
group_file="$project_folder"/output/groups_wikidata2.tsv
artist_file="$project_folder"/output/artists_merged.tsv
geographical_file="$project_folder"/output/geographical_wikidata2.tsv
event_file="$project_folder"/output/events_merged.tsv
organization_file="$project_folder"/output/organizations_merged.tsv

output_file="$project_folder"/output/KB.tsv

# unknown args
unknown=''

# get value of argument given as -avalue
get_simple_arg_value() {
	echo "$(echo "$1" | sed 's/^..\(.*\)/\1/')"
}

# get value of argument given as --arg=value
get_arg_value() {
	echo "$(echo "$1" | awk -F'=' '{ print $2 }')"
}

help() {
	echo "Usage:"
	echo "  sh mkkb.sh [args]"
	echo "Args:"
	echo "  --person       | -p  Person KB file."
	echo "  --group        | -g  Group KB file."
	echo "  --artist       | -a  Artist KB file."
	echo "  --geographical | -l  Geographical KB file."
	echo "  --event        | -e  Event KB file."
	echo "  --organization | -o  Organization KB file."
	echo "Description:"
	echo "  Merges files generated by KB extraction into single KB file."
	exit 0
}

# parse args
while true; do
	case "$1" in
		--person|-p )
			person_file="$2"
			if [ -z "$2" ]; then
				echo 'Person file not specified!' >&2
				exit 1
			fi
			shift 2
			;;
		--person=* )
			person_file="$(get_arg_value "$1")"
			shift
			;;
		-p* )
			person_file="$(get_simple_arg_value "$1")"
			shift
			;;
		--group|-g )
			group_file="$2"
			if [ -z "$2" ]; then
				echo 'Group file not specified!' >&2
				exit 1
			fi
			shift 2
			;;
		--group=* )
			group_file="$(get_arg_value "$1")"
			shift
			;;
		-g* )
			group_file="$(get_simple_arg_value "$1")"
			shift
			;;
		--artist|-a )
			artist_file="$2"
			if [ -z "$2" ]; then
				echo 'Artist file not specified!' >&2
				exit 1
			fi
			shift 2
			;;
		--artist=* )
			artist_file="$(get_arg_value "$1")"
			shift
			;;
		-a* )
			artist_file="$(get_simple_arg_value "$1")"
			shift
			;;
		--geographical|-l )
			geographical_file="$2"
			if [ -z "$2" ]; then
				echo 'Geographical file no specified!' >&2
				exit 1
			fi
			shift 2
			;;
		--geographical=* )
			geographical_file="$(get_arg_value "$1")"
			shift
			;;
		-l* )
			geographical_file="$(get_simple_arg_value "$1")"
			shift
			;;
		--event|-e )
			event_file="$2"
			if [ -z "$2" ]; then
				echo 'Event file not specified!' >&2
				exit 1
			fi
			shift 2
			;;
		--event=* )
			event_file="$(get_arg_value "$1")"
			shift
			;;
		-e* )
			event_file="$(get_simple_arg_value "$1")"
			shift
			;;
		--organization|-o )
			organization_file="$2"
			if [ -z "$2" ]; then
				echo 'Organization file not specified!' >&2
				exit 1
			fi
			shift 2
			;;
		--organization=* )
			organization_file="$(get_arg_value "$1")"
			shift
			;;
		-o* )
			organization_file="$(get_simple_arg_value "$1")"
			shift
			;;
		--help|-h )
			help
			shift
			;;
		* )
			unknown="$1"
			break
			;;
	esac
done

if [ -n "$unknown" ]; then
	echo "Unknown argument $unknown"'!' >&2
	exit 1
fi

# setup - create output folder
[ -d "$project_folder"/output ] || mkdir "$project_folder"/output

echo 'Merging output files into KB'

echo "VERSION=cs_wd+wd_$(date '+%Y%m%d_%H%M%S')" > "$output_file"
cat "$project_folder"/HEAD "$person_file" "$group_file" "$artist_file" "$geographical_file" "$event_file" "$organization_file" \
>> "$output_file"

